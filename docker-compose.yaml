version: '3.0'

services:
  searcher:
    build: ./searcher
    restart: on-failure
    depends_on:
      - rabbit
    volumes:
      - ~/.ssh:/root/.ssh
      - ~/.bash_history:/root/.bash_history
      - ./searcher:/app
      - errors:/resource/errors
      - analyzer:/resource/analyzer
      - search:/resource/search
    command: python3 main.py

  rabbit:
    image: rabbitmq:3.13.0-management
    ports:
      - 5672:5672
      - 15672:15672
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 1m30s
      timeout: 30s
      retries: 5
      start_period: 30s
volumes:
  search:
  errors:
  analyzer:



  
  # client:
  #   container_name: client
  #   build: .
  #   volumes:
  #     - ~/.ssh:/root/.ssh
  #     - ~/.bash_history:/root/.bash_history
  #     - .:/app
  #   environment:
  #     DEBUG: ${DEBUG}
  #     TELEGRAM_API_ID: ${TELEGRAM_API_ID}
  #     TELEGRAM_API_HASH: ${TELEGRAM_API_HASH}
  #     TELEGRAM_CHANNELS: ${TELEGRAM_CHANNELS}
  #     SESSION_NAME: ${SESSION_NAME}
  #     HOST: ${HOST}
  #     PORT: ${PORT}
  #     DB: ${DB}
  #     TIME_LIFE: ${TIME_LIFE}
  #   depends_on:
  #     - backend
  #     - bot
  #     - redis
  #   env_file:
  #     - .env
  #   stdin_open: true
  #   tty: true
  #   command: python3 client/main.py
  # backend:
  #   container_name: backend
  #   build: .
  #   volumes:
  #     - ~/.ssh:/root/.ssh
  #     - ~/.bash_history:/root/.bash_history
  #     - .:/app
  #   environment:
  #     DEBUG: ${DEBUG}
  #     GPT_KEY: ${GPT_KEY}
  #     PROMPT_FOR_CATEGORY: ${PROMPT_FOR_CATEGORY}
  #     PROMPT_FOR_REWRITE: ${PROMPT_FOR_REWRITE}
  #     SYSTEM_MESSAGE_FOR_REWRITE: ${SYSTEM_MESSAGE_FOR_REWRITE}
  #     SYSTEM_MESSAGE_FOR_CATEGORY: ${SYSTEM_MESSAGE_FOR_CATEGORY}
  #     HOST: ${HOST}
  #     PORT: ${PORT}
  #     DB: ${DB}
  #   depends_on:
  #     - bot
  #     - redis
  #   env_file:
  #     - .env
  #   command: python3 backend/gpt.py
  # redis:
  #   image: redis:latest
  #   ports:
  #     - 6379:6379